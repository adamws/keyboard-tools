import{_ as e,c as s,o as a,U as i}from"./chunks/framework.cMtk_7u2.js";const m=JSON.parse('{"title":"Development","description":"","frontmatter":{},"headers":[],"relativePath":"development.md","filePath":"development.md"}'),t={name:"development.md"},n=i(`<h1 id="development" tabindex="-1">Development <a class="header-anchor" href="#development" aria-label="Permalink to &quot;Development&quot;">​</a></h1><h2 id="environment-setup" tabindex="-1">Environment setup <a class="header-anchor" href="#environment-setup" aria-label="Permalink to &quot;Environment setup&quot;">​</a></h2><p>You need to have <a href="https://golang.org/" target="_blank" rel="noreferrer">Go</a>, <a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js</a>, <a href="https://www.docker.com/" target="_blank" rel="noreferrer">Docker</a>, and <a href="https://docs.docker.com/compose/" target="_blank" rel="noreferrer">Docker Compose</a> (comes pre-installed with Docker on Mac and Windows) installed on your computer.</p><p>Verify the tools by running the following commands:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div><h3 id="start-on-local-machine" tabindex="-1">Start on local machine <a class="header-anchor" href="#start-on-local-machine" aria-label="Permalink to &quot;Start on local machine&quot;">​</a></h3><h4 id="start-in-development-mode" tabindex="-1">Start in development mode <a class="header-anchor" href="#start-in-development-mode" aria-label="Permalink to &quot;Start in development mode&quot;">​</a></h4><p>From <code>kicad-api</code> directory run the command (you might need to prepend it with <code>sudo</code> depending on your setup):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span></span></code></pre></div><p>This starts a <code>kicad</code> specific containers required by <code>server</code>.</p><p>Navigate to the <code>server</code> folder and start the back end:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server.go</span></span></code></pre></div><p>The back end will serve on <code>http://localhost:8080</code>.</p><p>Navigate to the <code>webapp</code> folder, install dependencies, and start the front end development server by running:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> webapp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><p>The application will be available on <code>http://localhost:5173</code>.</p>`,16),o=[n];function l(p,r,h,d,c,k){return a(),s("div",null,o)}const v=e(t,[["render",l]]);export{m as __pageData,v as default};
