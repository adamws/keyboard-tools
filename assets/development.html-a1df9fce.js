import{_ as o,M as r,p as t,q as d,R as n,t as e,N as s,a1 as i}from"./framework-96b046e1.js";const c={},l=n("h1",{id:"development",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#development","aria-hidden":"true"},"#"),e(" Development")],-1),p=n("h2",{id:"environment-setup",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#environment-setup","aria-hidden":"true"},"#"),e(" Environment setup")],-1),h={href:"https://golang.org/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://nodejs.org/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.docker.com/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://docs.docker.com/compose/",target:"_blank",rel:"noopener noreferrer"},b=i(`<p>Verify the tools by running the following commands:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go version
<span class="token function">npm</span> <span class="token parameter variable">--version</span>
<span class="token function">docker</span> <span class="token parameter variable">--version</span>
<span class="token function">docker-compose</span> <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="start-on-local-machine" tabindex="-1"><a class="header-anchor" href="#start-on-local-machine" aria-hidden="true">#</a> Start on local machine</h3><h4 id="start-in-development-mode" tabindex="-1"><a class="header-anchor" href="#start-in-development-mode" aria-hidden="true">#</a> Start in development mode</h4><p>From <code>kicad-api</code> directory run the command (you might need to prepend it with <code>sudo</code> depending on your setup):</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker-compose</span> up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This starts a <code>kicad</code> specific containers required by <code>server</code>.</p><p>Navigate to the <code>server</code> folder and start the back end:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> server
go run server.go
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>The back end will serve on <code>http://localhost:8080</code>.</p><p>Navigate to the <code>webapp</code> folder, install dependencies, and start the front end development server by running:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> webapp
<span class="token function">npm</span> <span class="token function">install</span>
<span class="token function">npm</span> run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The application will be available on <code>http://localhost:5173</code>.</p>`,13);function g(f,k){const a=r("ExternalLinkIcon");return t(),d("div",null,[l,p,n("p",null,[e("You need to have "),n("a",h,[e("Go"),s(a)]),e(", "),n("a",m,[e("Node.js"),s(a)]),e(", "),n("a",v,[e("Docker"),s(a)]),e(", and "),n("a",u,[e("Docker Compose"),s(a)]),e(" (comes pre-installed with Docker on Mac and Windows) installed on your computer.")]),b])}const x=o(c,[["render",g],["__file","development.html.vue"]]);export{x as default};
