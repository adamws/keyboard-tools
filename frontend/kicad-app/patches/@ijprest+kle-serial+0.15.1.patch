diff --git a/node_modules/@ijprest/kle-serial/index.ts b/node_modules/@ijprest/kle-serial/index.ts
index af8daf8..8847f5e 100755
--- a/node_modules/@ijprest/kle-serial/index.ts
+++ b/node_modules/@ijprest/kle-serial/index.ts
@@ -104,6 +104,7 @@ export class Serial {
     // Initialize with defaults
     let current: Key = new Key();
     let kbd = new Keyboard();
+    let cluster = { x: 0, y: 0 };
     var align = 4;
 
     for (var r = 0; r < rows.length; ++r) {
@@ -152,6 +153,16 @@ export class Serial {
               );
             }
             if (item.r != null) current.rotation_angle = item.r;
+            if (item.rx != null) {
+              current.rotation_x = cluster.x = item.rx;
+              current.x = cluster.x;
+              current.y = cluster.y;
+            }
+            if (item.ry != null) {
+              current.rotation_y = cluster.y = item.ry;
+              current.x = cluster.x;
+              current.y = cluster.y;
+            }
             if (item.rx != null) current.rotation_x = item.rx;
             if (item.ry != null) current.rotation_y = item.ry;
             if (item.a != null) align = item.a;
diff --git a/node_modules/@ijprest/kle-serial/test/test.js b/node_modules/@ijprest/kle-serial/test/test.js
index ca22f01..a6288d6 100755
--- a/node_modules/@ijprest/kle-serial/test/test.js
+++ b/node_modules/@ijprest/kle-serial/test/test.js
@@ -89,6 +89,14 @@ describe("deserialization", function() {
       expect(result.keys[0].x2).to.not.equal(0);
       expect(result.keys[0].y2).to.not.equal(0);
     });
+
+    it("should add x and y to center of rotation", function() {
+      var result = kbd.Serial.deserialize([[{r:10,rx:1,ry:1,y:-1.1,x:2},"E"]]);
+      expect(result).to.be.an.instanceOf(kbd.Keyboard);
+      expect(result.keys).to.have.length(1);
+      expect(result.keys[0].x).to.equal(3);
+      expect(result.keys[0].y).to.be.closeTo(-0.1, 0.0001);
+    });
   });
 
   describe("of key sizes", function() {
