services:

  reverse-proxy:
    image: traefik:v2.9
    command:
      - "--api.dashboard=false"
      - "--metrics.prometheus=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls.certResolver=${TRAEFIK_CERT_RESOLVER}"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  prometheus:
    image: prom/prometheus:v2.43.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.${DOMAIN}`)"
      - "traefik.http.routers.prometheus.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_BASIC_AUTH_USERS}"

  app:
    image: admwscki/keyboard-tools-server:${TAG:-latest}
    expose:
      - "8080"
    env_file:
      - production.env
    depends_on:
      - worker
      - redis
      - minio
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls=true"
      - "traefik.http.routers.app.tls.certresolver=${TRAEFIK_CERT_RESOLVER}"
      - "traefik.http.routers.app.rule=Host(`${DOMAIN}`) || Host(`kicad.${DOMAIN}`)"

  worker:
    image: admwscki/keyboard-tools-kicad:${TAG:-latest}
    command: celery -A src.tasks.celery worker -l INFO --prefetch-multiplier 1 -E
    env_file:
      - production.env
    depends_on:
      - redis
      - minio

  flower:
    image: admwscki/keyboard-tools-flower:0.1
    env_file:
      - production.env
    depends_on:
      - worker

  redis:
    image: redis:6-alpine

  minio:
    image: minio/minio:RELEASE.2023-01-25T00-19-54Z
    volumes:
      - minio_data:/data
    env_file:
      - production.env
    environment:
      PYTHONUNBUFFERED: 1
    command: server /data


volumes:
  minio_data:
  prometheus_data:

